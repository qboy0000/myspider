# -*- coding: utf-8 -*-
import scrapy
from myspider.items import ExploitDBItem,ExploitFileItem
import os,json
from scrapy.conf import settings
import pymongo

class ExploitdbCodeSpider(scrapy.Spider):
    name = 'exploitdb_code'
    allowed_domains = ['www.exploit-db.com']

    DEFAULT_REQUEST_HEADERS = {
        'Accept': 'application/json, text/javascript, */*; q=0.01',
        'Accept-Language': 'en',
        'x-requested-with': 'XMLHttpRequest'
    }

    DEFAULT_LENGTH = 15

    def start_requests(self):

        cls = self.__class__
        start_urls = ['https://www.exploit-db.com/?draw=1&start={}&length={}'.format(0,cls.DEFAULT_LENGTH)
                      ]
        # # return [scrapy.FormRequest('https://www.exploit-db.com/exploits/44218/')]
        #
        return [scrapy.FormRequest("{}".format(url),headers=cls.DEFAULT_REQUEST_HEADERS,
                                   callback=self.parse_list) for url in start_urls]

    def parse_list(self, response):
        self.client = pymongo.MongoClient(host=settings['MONGO_HOST'], port=settings['MONGO_PORT'])
        # 数据库登录需要帐号密码的话
        # self.client.admin.authenticate(settings['MINGO_USER'], settings['MONGO_PSW'])
        self.db = self.client[settings['MONGO_DB']]  # 获得数据库的句柄
        exploitdb_list  = self.db['exploitdb_base'].find()
        for edb in exploitdb_list:
            edb_id = edb['id']
            if not os.path.exists('download/exploitdb_code/{}'.format(edb_id)):
                print "file not exist edb_id ===>id", edb_id
                fileItem = ExploitFileItem()
                fileItem['file_urls'] = ['https://www.exploit-db.com/download/{}'.format(edb['id'])]
                yield fileItem
                # break
        # print response.text
        # cls = self.__class__
        #
        # try:
        #     resp_json = json.loads(response.text)
        #     draw = resp_json["draw"]
        #     recordsTotal = resp_json['recordsTotal']
        #     data = resp_json['data']
        #     if len(data) > 0:
        #         for d in data:
        #             item = ExploitDBItem()
        #             for k in d.keys():
        #                 print k,item.keys()
        #                 # if k in item.keys():
        #                 item[k] = d[k]
        #                 # else:
        #                 #     print "{} is not in exploit item".format(k)
        #             yield item
        #             if 'download' in d:
        #                 download = d['download']
        #                 fileItem = ExploitFileItem()
        #                 fileItem['file_urls'] = ['https://www.exploit-db.com/download/{}'.format(d['id'])]
        #                 # yield fileItem
        #
        #     if draw * cls.DEFAULT_LENGTH < recordsTotal:
        #         next_url = 'https://www.exploit-db.com/?draw={draw}&start={start}&length={length}'.format(draw = draw+1,start = draw * cls.DEFAULT_LENGTH,length = cls.DEFAULT_LENGTH)
        #         yield scrapy.FormRequest("{}".format(next_url), headers=cls.DEFAULT_REQUEST_HEADERS,
        #                            callback=self.parse_list)
        # except Exception as ex:
        #     print ex